//************************
//    VARIABLES
//************************
$gl-gutter:    5rem; // Total

$breakpoints: (
  small: 48em,
  medium: 64em,
  large: 80em
);

$gl-xs:        "screen and (max-width: 35.5em)"; // up to 568px
$gl-sm:        "screen and (max-width: 48em)"; // max 768px
$gl-md:        "screen and (max-width: 64em)"; // max 1024px
$gl-lg:        "screen and (max-width: 80em)"; // max 1280px

$glp_col-1: (100%/12);
$glp_col-2: ($glp_col-1*2);
$glp_col-3: ($glp_col-1*3);
$glp_col-4: ($glp_col-1*4);
$glp_col-5: ($glp_col-1*5);
$glp_col-6: ($glp_col-1*6);
$glp_col-7: ($glp_col-1*7);
$glp_col-8: ($glp_col-1*8);
$glp_col-9: ($glp_col-1*9);
$glp_col-10: ($glp_col-1*10);
$glp_col-11: ($glp_col-1*11);
$glp_col-12: 100%;

$glp_col-5-12: (100%/5);
$glp_col-7-12: (100%/7);
$glp_col-8-12: (100%/8);
$glp_col-9-12: (100%/9);
$glp_col-10-12: (100%/10);
$glp_col-11-12: (100%/11);

// Function to generate the grid by number
@mixin makeGridByNumber($grid)
{
  [class*="#{$grid}-1"] > .col, [class*="#{$grid}-1"] > [class*='col-']{ flex-basis: $glp_col-12; max-width: $glp_col-12; }
  [class*="#{$grid}-2"] > .col, [class*="#{$grid}-2"] > [class*='col-']{ flex-basis: $glp_col-6; max-width: $glp_col-6; }
  [class*="#{$grid}-3"] > .col, [class*="#{$grid}-3"] > [class*='col-']{ flex-basis: $glp_col-4; max-width: $glp_col-4; }
  [class*="#{$grid}-4"] > .col, [class*="#{$grid}-4"] > [class*='col-']{ flex-basis: $glp_col-3; max-width: $glp_col-3; }
  [class*="#{$grid}-5"] > .col, [class*="#{$grid}-5"] > [class*='col-']{ flex-basis: $glp_col-5-12; max-width: $glp_col-5-12; }
  [class*="#{$grid}-6"] > .col, [class*="#{$grid}-6"] > [class*='col-']{ flex-basis: $glp_col-2; max-width: $glp_col-2; }
  [class*="#{$grid}-7"] > .col, [class*="#{$grid}-7"] > [class*='col-']{ flex-basis: $glp_col-7-12; max-width: $glp_col-7-12; }
  [class*="#{$grid}-8"] > .col, [class*="#{$grid}-8"] > [class*='col-']{ flex-basis: $glp_col-8-12; max-width: $glp_col-8-12; }
  [class*="#{$grid}-9"] > .col, [class*="#{$grid}-9"] > [class*='col-']{ flex-basis: $glp_col-9-12; max-width: $glp_col-9-12; }
  [class*="#{$grid}-10"] > .col, [class*="#{$grid}-10"] > [class*='col-']{ flex-basis: $glp_col-10-12; max-width: $glp_col-10-12; }
  [class*="#{$grid}-11"] > .col, [class*="#{$grid}-11"] > [class*='col-']{ flex-basis: $glp_col-11-12; max-width: $glp_col-11-12; }
  [class*="#{$grid}-12"] > .col, [class*="#{$grid}-12"] > [class*='col-']{ flex-basis: $glp_col-1; max-width: $glp_col-1; }
}

// Function to generate the grid by columns
@mixin makeCol($col)
{
    [class*='grid'] {
        > [class*="#{$col}-1"]{ flex-basis: $glp_col-1;max-width: $glp_col-1; }
        > [class*="#{$col}-2"]{ flex-basis: $glp_col-2;max-width: $glp_col-2; }
        > [class*="#{$col}-3"]{ flex-basis: $glp_col-3;max-width: $glp_col-3; }
        > [class*="#{$col}-4"]{ flex-basis: $glp_col-4;max-width: $glp_col-4;}
        > [class*="#{$col}-5"]{ flex-basis: $glp_col-5;max-width: $glp_col-5;}
        > [class*="#{$col}-6"]{ flex-basis: $glp_col-6;max-width: $glp_col-6;}
        > [class*="#{$col}-7"]{ flex-basis: $glp_col-7;max-width: $glp_col-7;}
        > [class*="#{$col}-8"]{ flex-basis: $glp_col-8;max-width: $glp_col-8;}
        > [class*="#{$col}-9"]{ flex-basis: $glp_col-9;max-width: $glp_col-9;}
        > [class*="#{$col}-10"]{ flex-basis: $glp_col-10;max-width: $glp_col-10;}
        > [class*="#{$col}-11"]{ flex-basis: $glp_col-11;max-width: $glp_col-11;}
        > [class*="#{$col}-12"]{ flex-basis: $glp_col-12;max-width: $glp_col-12;}
    }
}

// Function to generate the offset
@mixin makeOff($off)
{
    [class*="grid"]{
        > [push-left*="#{$off}-0"]{ margin-left: 0; }
        > [push-left*="#{$off}-1"]{ margin-left: $glp_col-1; }
        > [push-left*="#{$off}-2"]{ margin-left: $glp_col-2; }
        > [push-left*="#{$off}-3"]{ margin-left: $glp_col-3; }
        > [push-left*="#{$off}-4"]{ margin-left: $glp_col-4; }
        > [push-left*="#{$off}-5"]{ margin-left: $glp_col-5; }
        > [push-left*="#{$off}-6"]{ margin-left: $glp_col-6; }
        > [push-left*="#{$off}-6"]{ margin-left: $glp_col-6; }
        > [push-left*="#{$off}-7"]{ margin-left: $glp_col-7; }
        > [push-left*="#{$off}-8"]{ margin-left: $glp_col-8; }
        > [push-left*="#{$off}-9"]{ margin-left: $glp_col-9; }
        > [push-left*="#{$off}-10"]{ margin-left: $glp_col-10; }
        > [push-left*="#{$off}-11"]{ margin-left: $glp_col-11; }

        > [push-right*="#{$off}-0"]{ margin-right: 0; }
        > [push-right*="#{$off}-1"]{ margin-right: $glp_col-1; }
        > [push-right*="#{$off}-2"]{ margin-right: $glp_col-2; }
        > [push-right*="#{$off}-3"]{ margin-right: $glp_col-3; }
        > [push-right*="#{$off}-4"]{ margin-right: $glp_col-4; }
        > [push-right*="#{$off}-5"]{ margin-right: $glp_col-5; }
        > [push-right*="#{$off}-6"]{ margin-right: $glp_col-6; }
        > [push-right*="#{$off}-6"]{ margin-right: $glp_col-6; }
        > [push-right*="#{$off}-7"]{ margin-right: $glp_col-7; }
        > [push-right*="#{$off}-8"]{ margin-right: $glp_col-8; }
        > [push-right*="#{$off}-9"]{ margin-right: $glp_col-9; }
        > [push-right*="#{$off}-10"]{ margin-right: $glp_col-10; }
        > [push-right*="#{$off}-11"]{ margin-right: $glp_col-11; }
    }
}

/* ==========================================================================
    GRIDLEX
    Just a Flexbox Grid System
========================================================================== */



[class*="grid"]{
  box-sizing: border-box;
  display: flex;
  flex-flow: row wrap;
  // margin: 0 (-$gl-gutter/2);
}

.row {
  padding: 0 $gl-gutter/2;
}

.col,
[class*="col-"]{
  box-sizing: border-box;
  flex: 0 0 auto;
  padding: 0 ($gl-gutter/2) $gl-gutter;
}
.col{
  flex: 1 1 0%;
}
.grid.col,
.grid[class*="col-"]{
  margin: 0;
  padding: 0;
}

/************************
    HELPERS SUFFIXES
*************************/
// FOR GRID
[class*="grid-"]{
// No spacing between cols : noGutter
  &[class*="-noGutter"]{
    margin: 0;
    > [class*="col"]{
      padding: 0;
    }
  }

// Horizontal alignment
  &[class*="-center"]{
    justify-content: center;
  }
  &[class*="-right"]{
    justify-content: flex-end;
    align-self: flex-end;
    margin-left: auto;
  }
// Vertical alignment
  &[class*="-top"]{
    align-items: flex-start;
  }
  &[class*="-middle"]{
    align-items: center;
  }
  &[class*="-bottom"]{
    align-items: flex-end;
  }

// Orders
  &[class*="-reverse"]{
    flex-direction: row-reverse;
  }
  &[class*="-column"] {
    flex-direction: column;
    > [class*="col-"] {
      flex-basis: auto;
    }
  }
  &[class*="-column-reverse"]{
    flex-direction: column-reverse;
  }

// Spaces between and around cols
  &[class*="-spaceBetween"]{
    justify-content: space-between;
  }
  &[class*="-spaceAround"]{
    justify-content: space-around;
  }

// Equal heights columns
  &[class*="-equalHeight"] > [class*="col"]{
    display: flex;
  }
}

// FOR COL
[class*="col-"]{
  &[class*="-top"]{
    align-self: flex-start;
  }
  &[class*="-middle"]{
    align-self: center;
  }
  &[class*="-bottom"]{
    align-self: flex-end;
  }
  &[class*="-first"]{
      order: -1;
  }
  &[class*="-last"]{
      order: 1;
  }
}

/************************
    GRID BY NUMBER
*************************/
@include makeGridByNumber(grid);

@media #{$gl-lg}{
  @include makeGridByNumber(_lg);
}
@media #{$gl-md}{
  @include makeGridByNumber(_md);
}
@media #{$gl-sm}{
  @include makeGridByNumber(_sm);
}
@media #{$gl-xs}{
  @include makeGridByNumber(_xs);
}


/************************
    COLS SIZES
*************************/
@include makeCol(col);
@include makeOff(off);

@media #{$gl-lg}{
  @include makeCol(_lg);
  @include makeOff(_lg);
}
@media #{$gl-md}{
  @include makeCol(_md);
  @include makeOff(_md);
}
@media #{$gl-sm}{
  @include makeCol(_sm);
  @include makeOff(_sm);
}
@media #{$gl-xs}{
  @include makeCol(_xs);
  @include makeOff(_xs);
}
